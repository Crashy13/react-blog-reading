{"version":3,"sources":["BlogList.js","BlogForm.js","App.js","reportWebVitals.js","index.js"],"names":["BlogList","props","blogs","map","blog","title","article","BlogForm","state","handleSubmit","bind","handleInput","event","this","setState","target","name","value","preventDefault","addBlog","onSubmit","onChange","type","placeholder","Component","App","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAgBeA,MAdf,SAAkBC,GAEhB,IAAMC,EAAQD,EAAMC,MAAMC,KAAI,SAACC,GAAD,OAC5B,+BACA,4BAAIA,EAAKC,QACT,4BAAID,EAAKE,YAFAF,EAAKC,UAKhB,OACE,6BAAMH,K,OC0BKK,E,kDAlCf,WAAYN,GAAQ,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACXH,MAAO,GACPC,QAAS,IAGX,EAAKG,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBARF,E,+CAWnB,SAAYE,GACVC,KAAKC,SAAL,eAAiBF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,U,0BAGpD,SAAaL,GACXA,EAAMM,iBACNL,KAAKZ,MAAMkB,QAAQN,KAAKL,OACxBK,KAAKC,SAAS,CAACT,MAAO,GAAIC,QAAS,O,oBAKrC,WACE,OACE,uBAAMc,SAAUP,KAAKJ,aAArB,UACA,uBAAOO,KAAK,QAAQC,MAAOJ,KAAKL,MAAMH,MAAOgB,SAAUR,KAAKF,YAAaW,KAAK,OAAOC,YAAY,eACjG,0BAAUP,KAAK,UAAUC,MAAOJ,KAAKL,MAAMF,QAASe,SAAUR,KAAKF,YAAaY,YAAY,iBAC5F,mD,GA7BmBC,aC+CRC,E,kDA3Cb,WAAYxB,GAAQ,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACXN,MAAO,IAET,EAAKiB,QAAU,EAAKA,QAAQT,KAAb,gBALE,E,qDAQnB,WAaEG,KAAKC,SAAS,CAAEZ,MAZF,CACZ,CAAEG,MAAO,SACPC,QAAS,sBAEX,CAAED,MAAO,KACPC,QAAS,sBAEX,CAAED,MAAO,YACPC,QAAS,2B,qBAOf,SAAQF,GACN,IAAMF,EAAK,YAAQW,KAAKL,MAAMN,OAC9BA,EAAMwB,KAAKtB,GACXS,KAAKC,SAAS,CAAEZ,Y,oBAGlB,WACE,OACE,qCACE,4CACA,cAAC,EAAD,CAAUiB,QAASN,KAAKM,UACxB,cAAC,EAAD,CAAUjB,MAAOW,KAAKL,MAAMN,e,GApClBsB,aCOHG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.82c7875d.chunk.js","sourcesContent":["import { Component } from 'react';\n\nfunction BlogList(props) {\n\n  const blogs = props.blogs.map((blog) =>(\n    <li key={blog.title}>\n    <p>{blog.title}</p>\n    <p>{blog.article}</p>\n    </li>\n  ));\n  return(\n    <ul>{ blogs }</ul>\n  )\n}\n\n\nexport default BlogList\n","import { Component } from 'react'\n\nclass BlogForm extends Component {\nconstructor(props) {\n  super(props);\n  this.state = {\n    title: '',\n    article: '',\n  }\n\n  this.handleSubmit = this.handleSubmit.bind(this);\n  this.handleInput = this.handleInput.bind(this);\n}\n\nhandleInput(event) {\n  this.setState({ [event.target.name]: event.target.value})\n}\n\nhandleSubmit(event) {\n  event.preventDefault();\n  this.props.addBlog(this.state);\n  this.setState({title: '', article: ''})\n  }\n\n\n\nrender() {\n  return (\n    <form onSubmit={this.handleSubmit}>\n    <input name=\"title\" value={this.state.title} onChange={this.handleInput} type=\"text\" placeholder=\"Blog Title\"/>\n    <textarea name=\"article\" value={this.state.article} onChange={this.handleInput} placeholder=\"Blog Article\"></textarea>\n    <button>Submit</button>\n    </form>\n  )\n}\n}\n\nexport default BlogForm\n","import { Component } from 'react';\nimport './App.css';\nimport BlogList from './BlogList';\nimport BlogForm from './BlogForm';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      blogs: [],\n    }\n    this.addBlog = this.addBlog.bind(this);\n  }\n\n  componentDidMount() {\n    const blogs = [\n      { title: 'Marvel',\n        article: 'A lot of text here',\n      },\n      { title: 'DC',\n        article: 'A lot of text here',\n      },\n      { title: 'Star Wars',\n        article: 'A lot of text here',\n      },\n    ];\n\n    this.setState({ blogs })\n  }\n\n  addBlog(blog) {\n    const blogs = [ ...this.state.blogs ];\n    blogs.push(blog);\n    this.setState({ blogs });\n  }\n\n  render() {\n    return (\n      <>\n        <h1>Blog Posts</h1>\n        <BlogForm addBlog={this.addBlog}/>\n        <BlogList blogs={this.state.blogs} />\n      </>\n    )\n  }\n\n  }\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}