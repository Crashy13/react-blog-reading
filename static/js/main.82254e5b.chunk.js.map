{"version":3,"sources":["Components/App.js","reportWebVitals.js","index.js"],"names":["App","props","state","blogs","selection","selectBlog","bind","this","setState","title","article","event","index","Number","currentTarget","dataset","map","blog","onClick","data-index","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRA4DeA,E,kDAvDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,GACPC,UAAW,MAGb,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAPD,E,qDAWnB,WAcEC,KAAKC,SAAS,CAAEL,MAbF,CACZ,CAAEM,MAAO,OACPC,QAAS,iIAEX,CAAED,MAAO,OACPC,QAAS,sBAEX,CAAED,MAAO,UACPC,QAAS,2B,wBASf,SAAWC,GACT,IAAMC,EAAQC,OAAOF,EAAMG,cAAcC,QAAQH,OACjDL,KAAKC,SAAS,CAAEJ,UAAWG,KAAKL,MAAMC,MAAMS,O,oBAI9C,WAAU,IAAD,WACDT,EAAQI,KAAKL,MAAMC,MAAMa,KAAI,SAACC,EAAML,GAAP,OACjC,aADoD,CACpD,MAAgBM,QAAS,EAAKb,WAAYc,aAAYP,EAAtD,SACE,6BAAKK,EAAKR,SADHG,MAIX,OACE,qCACE,6BAAMT,IACN,kCACE,uCAAKI,KAAKL,MAAME,iBAAhB,aAAK,EAAsBK,QAC3B,sCAAIF,KAAKL,MAAME,iBAAf,aAAI,EAAsBM,oB,GA/ClBU,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.82254e5b.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './App.css';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      blogs: [],\n      selection: null,\n    }\n\n    this.selectBlog = this.selectBlog.bind(this)\n\n  }\n\n  componentDidMount() {\n    const blogs = [\n      { title: 'Dogs',\n        article: 'A lot of text here that just keeps going to fill up the area to make it a more substatial field of text for testing purposes.',\n      },\n      { title: 'Cats',\n        article: 'A lot of text here',\n      },\n      { title: 'Weasels',\n        article: 'A lot of text here',\n      },\n    ];\n\n\n    this.setState({ blogs })\n  }\n\n\n  selectBlog(event) {\n    const index = Number(event.currentTarget.dataset.index);\n    this.setState({ selection: this.state.blogs[index] }) // sets state to the object that was clicked on with selectBlog\n  }\n\n\n  render() {\n    const blogs = this.state.blogs.map((blog, index) => ( // filters through the array of objects that is blogs\n      <li key={index} onClick={this.selectBlog} data-index={index}>\n        <h2>{blog.title}</h2>\n      </li> // sets an event when the title is clicked to call the selectBlog function\n    ));\n    return (\n      <>\n        <ul>{ blogs }</ul>\n        <aside>\n          <h2>{this.state.selection?.title}</h2>\n          <p>{this.state.selection?.article}</p>\n        </aside>\n      </>\n    )\n  }\n\n  }\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './Components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}